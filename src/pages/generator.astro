---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <div
    class="flex flex-col h-full items-center justify-center glass bg-primary"
  >
    <div class="flex flex-col gap-8 mx-auto p-8 pt-0 w-full md:flex-row h-180">
      <!-- üñºÔ∏è Aper√ßu SVG -->
      <div
        class="card bg-base-100 shadow-md p-6 flex-1 flex flex-col items-center justify-center"
      >
        <div
          id="svg-container"
          class="w-full h-full flex justify-center items-center border border-dashed border-primary bg-gradient-to-br from-blue-50 to-blue-100"
        >
          <div
            id="svg-output"
            class="w-full h-full flex justify-center items-center"
          >
            <!-- SVG g√©n√©r√© sera ins√©r√© ici -->
          </div>
        </div>
      </div>

      <!-- üíª Code SVG -->
      <div
        class="card bg-neutral text-neutral-content shadow-md p-6 flex-1 overflow-auto"
      >
        <pre
          id="svg-code"
          class="bg-neutral text-neutral-content p-4 rounded text-sm whitespace-pre-wrap w-full h-full overflow-auto">
        </pre>
      </div>
    </div>

    <div class="flex gap-4 w-full max-w-3xl px-8 mb-8">
      <input
        id="user-prompt"
        type="text"
        placeholder="D√©crivez votre SVG..."
        class="input input-bordered w-full"
      />
      <button id="generate-button" class="btn btn-secondary">G√©n√©rer</button>
    </div>

    <div class="flex gap-4 mt-4">
      <input
        id="svg-name"
        type="text"
        placeholder="Nom du SVG"
        class="input input-bordered w-full"
      />
      <button id="save-button" class="btn btn-secondary">Enregistrer</button>
    </div>
  </div>
</Layout>

<script>
  //@ts-nocheck
  let promptList = [];

  async function generateSVG(messages) {
    const res = await fetch("/api/generateSVG", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ messages }),
    });

    if (!res.ok) {
      throw new Error("Erreur serveur");
    }

    const data = await res.json();
    return data.svg;
  }

  /*async function handleSubmit() {
    const promptElement = document.getElementById("user-prompt");
    const prompt = promptElement ? promptElement.value.trim() : "";

    if (!prompt) {
      alert("Veuillez entrer un prompt SVG.");
      return;
    }

    const svgContainer = document.getElementById("svg-container");
    const svgOutput = document.getElementById("svg-output");
    const codeBlock = document.getElementById("svg-code");
    const generateButton = document.getElementById("generate-button");

    svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
    generateButton.disabled = true;

    // R√©initialiser l'historique
    promptList.length = 0;
    promptList.push({ role: "user", content: prompt });

    try {
      const aiResponse = await generateSVG(promptList);
      const svgMatch = aiResponse.content?.match(/<svg[\s\S]*?<\/svg>/i);
      const svgCode = svgMatch ? svgMatch[0] : "";

      promptList.push({ role: "assistant", content: svgCode });

      svgOutput.textContent = svgCode;
      svgContainer.innerHTML = svgCode;
      if (codeBlock) {
        codeBlock.textContent = svgCode;
      }
    } catch (error) {
      console.error("Erreur SVG:", error);
      svgContainer.innerHTML = `<p class="text-error">Erreur de g√©n√©ration du SVG</p>`;
    } finally {
      generateButton.disabled = false;
    }
  }*/

  async function handleSubmit() {
    const promptElement = document.getElementById("user-prompt");
    const generateButton = document.getElementById("generate-button");
    const svgContainer = document.getElementById("svg-container");
    const svgOutput = document.getElementById("svg-output");
    const codeBlock = document.getElementById("svg-code");

    const prompt = promptElement ? promptElement.value.trim() : "";
    if (!prompt) {
      alert("Veuillez entrer un prompt SVG.");
      return;
    }

    // R√©initialiser l'historique
    promptList.length = 0;
    promptList.push({ role: "user", content: prompt });

    if (svgContainer) {
      svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
    }
    if (generateButton) generateButton.disabled = true;

    try {
      const aiResponse = await generateSVG(promptList);
      const svgMatch = aiResponse.content?.match(/<svg[\s\S]*?<\/svg>/i);
      const svgCode = svgMatch ? svgMatch[0] : "";

      promptList.push({ role: "assistant", content: svgCode });

      if (svgOutput) {
        svgOutput.textContent = svgCode;
      }
      if (svgContainer) {
        svgContainer.innerHTML = svgCode;
      }
      if (codeBlock) {
        codeBlock.textContent = svgCode;
      }
    } catch (error) {
      console.error("Erreur SVG:", error);
      if (svgContainer) {
        svgContainer.innerHTML = `<p class="text-error">Erreur de g√©n√©ration du SVG</p>`;
      }
    } finally {
      if (generateButton) generateButton.disabled = false;
    }
  }

  async function saveSVG() {
    const nameInput = document.getElementById("svg-name");
    const codeBlock = document.getElementById("svg-code");
    const name = nameInput ? nameInput.value.trim() : "";
    const svgCode = codeBlock ? codeBlock.textContent.trim() : "";

    if (!name || !svgCode) {
      alert("Veuillez entrer un nom et g√©n√©rer un SVG avant d‚Äôenregistrer.");
      return;
    }

    try {
      const res = await fetch("/api/saveSVG", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ name, svg: svgCode }),
      });

      if (!res.ok) throw new Error("Erreur lors de l‚Äôenregistrement");

      alert("‚úÖ SVG enregistr√© avec succ√®s !");
      nameInput.value = "";
    } catch (err) {
      console.error(err);
      alert("‚ùå √âchec de l‚Äôenregistrement du SVG.");
    }
  }

  window.addEventListener("DOMContentLoaded", () => {
    const generateButton = document.getElementById("generate-button");
    const saveButton = document.getElementById("save-button");

    if (generateButton) {
      generateButton.addEventListener("click", handleSubmit);
    }
    if (saveButton) {
      saveButton.addEventListener("click", saveSVG);
    }
  });
</script>
